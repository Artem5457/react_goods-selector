{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","addGood","good","includes","setState","removeGood","filter","el","showSelectedGoods","lastGood","length","copyList","pop","join","this","className","type","classNames","onClick","map","product","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAe,CACbC,aAAc,CAACH,EAAgB,K,EAGjCI,QAAU,SAACC,GACL,EAAKH,MAAMC,aAAaG,SAASD,IAIrC,EAAKE,UAAS,gBAAGJ,EAAH,EAAGA,aAAH,MAAuB,CACnCA,aAAa,GAAD,mBAAMA,GAAN,CAAoBE,S,EAIpCG,WAAa,SAACH,GACZ,EAAKE,UAAS,kBAAuB,CACnCJ,aADY,EAAGA,aACYM,QAAO,SAAAC,GAAE,OAAIA,IAAOL,U,EAInDM,kBAAoB,WAClB,IAAQR,EAAiB,EAAKD,MAAtBC,aACFS,EAAWT,EAAaA,EAAaU,OAAS,GAC9CC,EAAQ,YAAOX,GAErB,OAA4B,IAAxBA,EAAaU,OACRV,EAAa,IAGtBW,EAASC,MAEmB,IAApBD,EAASD,OAAgB,wBAA1B,UAAuDC,EAASE,KAAK,MAArE,gBAAkFJ,EAAlF,O,4CAGT,WAAU,IAAD,OACCT,EAAiBc,KAAKf,MAAtBC,aAER,OACE,sBAAKe,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,eACA,CAAE,uBAAgD,IAAxBjB,EAAaU,SAEzCQ,QAAS,WACP,EAAKd,SACH,CAAEJ,aAAc,MARtB,eAcA,oBAAIe,UAAU,aAAd,gCAGF,qBAAKA,UAAU,cAAf,SACGD,KAAKN,sBAGR,oBAAIO,UAAU,OAAd,SACGlB,EAAgBsB,KAAI,SAAAC,GAAO,OAC1B,qBACEL,UAAWE,IACT,aACA,CAAE,uBAAwBjB,EAAaG,SAASiB,KAHpD,UAOGA,EACD,wBACEL,UAAU,YACVC,KAAK,SACLE,QACElB,EAAaG,SAASiB,GAClB,kBAAM,EAAKf,WAAWe,IACtB,kBAAM,EAAKnB,QAAQmB,IAN3B,SASGpB,EAAaG,SAASiB,GAAW,SAAW,UAZ1CA,e,GArEDC,IAAMC,WA2FTxB,IC/GfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.98bd042b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string[],\n}\n\ntype Props = {};\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    selectedGood: [goodsFromServer[0]],\n  };\n\n  addGood = (good: string) => {\n    if (this.state.selectedGood.includes(good)) {\n      return;\n    }\n\n    this.setState(({ selectedGood }) => ({\n      selectedGood: [...selectedGood, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState(({ selectedGood }) => ({\n      selectedGood: selectedGood.filter(el => el !== good),\n    }));\n  };\n\n  showSelectedGoods = () => {\n    const { selectedGood } = this.state;\n    const lastGood = selectedGood[selectedGood.length - 1];\n    const copyList = [...selectedGood];\n\n    if (selectedGood.length === 1) {\n      return selectedGood[0];\n    }\n\n    copyList.pop();\n\n    return (copyList.length === 0) ? 'No goods are selected' : `${copyList.join(', ')} and ${lastGood}.`;\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__header\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'clear-button',\n              { 'clear-button--hidden': selectedGood.length === 0 },\n            )}\n            onClick={() => {\n              this.setState((\n                { selectedGood: [] }\n              ));\n            }}\n          >\n            X\n          </button>\n          <h1 className=\"App__title\">Selected goods:</h1>\n        </div>\n\n        <div className=\"App__window\">\n          {this.showSelectedGoods()}\n        </div>\n\n        <ul className=\"list\">\n          {goodsFromServer.map(product => (\n            <li\n              className={classNames(\n                'list__item',\n                { 'list__item--selected': selectedGood.includes(product) },\n              )}\n              key={product}\n            >\n              {product}\n              <button\n                className=\"list__btn\"\n                type=\"button\"\n                onClick={\n                  selectedGood.includes(product)\n                    ? () => this.removeGood(product)\n                    : () => this.addGood(product)\n                }\n              >\n                {selectedGood.includes(product) ? 'Remove' : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}